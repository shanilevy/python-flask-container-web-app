# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: flask-app
#   labels:
#     app: flask-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: flask-app
#   template:
#     metadata:
#       labels:
#         app: flask-app
#     spec:
#       containers:
#       - name: flask-app
#         envFrom:
#         - secretRef:
#             name: mongosecret
#         image: TEST_IMAGE_NAME
#         ports:
#         - containerPort: 8080
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: flask-app
# spec:
#   selector:
#     app: flask-app
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 8080
#   type: LoadBalancer
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-gke-ing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-gke-ing
  template:
    metadata:
      labels:
        app: hello-gke-ing
    spec:
      containers:
      - name: hello-kubernetes
        envFrom:
        - secretRef:
            name: mongosecret
        image: TEST_IMAGE_NAME
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: hello-gke-ing
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: hello-gke-ing
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: hello-gke-ing
  annotations:
    kubernetes.io/ingress.class: gce
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: hello-gke-ing
          servicePort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: mongosecret
#type: Opaque
stringData:
  CONNECTION_STRING: MONGO_CONNECTION_STRING
  DB_NAME: MONGO_DB_NAME
  COLLECTION_NAME: MONGO_COLLECTION_NAME